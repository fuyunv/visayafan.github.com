#+OPTIONS: ^:{} _:{} num:t toc:t \n:t
#+SETUPFILE: "../../layout/extension.org"
#+INCLUDE: "../../layout/template-toc.org"
#+title:

* 快捷键
  Mac中保存在~/Library/Preferences/.IntelliJ IDEA <xx>/keymaps/，Each keymap file contains only differences between the current and the parent keymaps.
  自定义Emacs快捷键模式
  | *跳转*         |                     |
  | C-g            | goto definition     |
  | C-S-g          | goto specific class |
  | M-up/down      | 上/下个方法         |
  | C-M-left/right | 上/下次位置         |
  | *编辑*         |                     |
  | Cmd-d          | 复制行或块          |
  | C-M-o          | organize imports    |
  | *补全*         |                     |
  | C-space        | basic completion    |
  | C-S-space      | smart completion    |
  Emacs copy.xml文件内容为：
#+INCLUDE: "/Users/visayafan/Library/Preferences/IntelliJIdea13/keymaps/Emacs copy.xml" src xml
* 经验
  IntelliJ IDEA 的 20 个代码自动完成的特性  http://www.oschina.net/question/12_70799
  从Eclipse转移到IntelliJ IDEA一点心得   http://www.ituring.com.cn/article/37792
* 导入第3方jar包
  File->Project structure(C-S-M-s)
* 补全时不区分大小写
  Editor=>Code Completion里把Case sensitive completion设置为None就可以了。
* 自动编译
  IntelliJ默认是不会自动编译项目的，所以在run之前会有个make的过程，习惯自动编译项目的可以在这里打开：Compiler=>make project automatically。因为IntelliJ项目空间不大，所以开启之后也不会像Eclipse一样出现build workspace很久的情况。
* Caret
  相当于Emacs中的er/expand-region mode，可以根据语法单元增量选择。
  快捷键是 =C-M-w=
* 版本控制
  我们开发肯定是有版本控制的，大家以前Eclipse的时候在本地文件和版本库不一致的时候，那么文件以及所在的文件夹都会出现一个〉表示，大家能很轻松的看到本地文件修改了哪一些，但是IntelliJ中默认是不能这样的。仅仅是给变化的文件在修改的时候提供了颜色上的变化，不包括其所在的各个父级文件夹哦，如果想和Eclipse一样的话需要如下图把设置勾选就可以了
* 编写单元测试
  http://jingyan.baidu.com/article/9faa72315be0ef473d28cb64.html
* 自动补全
  查看自动补全的帮助 help->productivity guide
* Editor中最大字符数
  file>other settings>default setting>code style>general
* quick fix
  =Alt Enter=
* Project View中快速定位当前打开文件位置
  =Nivigate->Select in->Project view= 快捷键 =Alt+F1 Enter=
  自动定位 Project view的设置里 autoscroll from source
* 自定义live template
  http://blog.csdn.net/little__zm/article/details/19561853
* intellij支持java8语法
  http://stackoverflow.com/questions/22703412/java-lambda-expressions-not-supported-at-this-language-level
  In IntelliJ IDEA, In File Menu->Project Structure, change "Project Language Level" to "8.0 - Lambdas, typ[e annotations etc."
* Gradle依赖
  Gradle窗口中点“刷新”即可下载依赖并添加到classpath中。
* 隐藏窗口快捷键
  =Shift ESC= 或 =Shift 单击= 
* 快速跳转到匹配括号
  keymap->Move caret to matched brace
* newline
  =shift enter= 新一行（下）
  =ctrl cmd enter= 新一行（上）
* 改变字体大小快捷键
  editor->general->change font size(zoom) with command+mouse wheel

  增加快捷键 increase/decrease font size
* chrome改变字体
  =M == =M -=
* 快速创建test
  =Cmd Shift T=
* 查看指定类继承关系
  https://www.jetbrains.com/idea/help/building-class-hierarchy.html
  首先要 =Ctrl h= build hierarchy
  再打开hierarchy tool window 或快捷键 =Cmd 8=
* 拷贝当前行
  拷贝时如果没有选中任何区域则拷贝当前行
  同理剪切
* 跳转Back/Forward
  =Cmd [=
  =Cmd ]=
* 上/下一个Tab
  =Cmd Shift [=
  =Cmd Shift ]=
* 跳转到代码块开始结束位置
  =Cmd Alt [=
  =Cmd Alt ]=
* Find Usage
  | Alt F7       | find usage in file |
  | Cmd Alt F7   | find usage         |
  | Cmd Shift F7 | highlight usage    |
* 快速切换主题
  =Ctrl `=
* Recent Files
  =Cmd e= 可以输入文件名查找
  =Ctrl Tab= 快速切换
  =Cmd Shift e= recent edited file
* Surrounding
  =Cmd Alt t=
* 查看参数信息
  在函数参数中 =Cmd p= 可查看此函数的参数信息
* 查看所在位置context信息
  https://www.jetbrains.com/idea/help/viewing-current-caret-location.html
  当代码块过长时 =Ctrl Shift q= 可以查看context信息
* 选择代码块
  =alt up=
  例如要选择引号间的内容，将光标放在引号中做任意位置，连续按 =alt up=
* 快速查找文件
  =cmd shift o=
  只键入文件名任意几个字母即可
* 所有live templates
  =cmd j=
* 查看出现错误的可能解决方法
  =alt enter=
* 方法跳转
  =ctrl up/down=
* 快速查看定义
  =cmd y=
  跳转是 =cmd b=
* 导航栏
  =cmd up=
* 选择当前位置到行首/行末
  =cmd shift left/right=
* acejump插件
