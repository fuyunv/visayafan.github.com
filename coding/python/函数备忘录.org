#+OPTIONS: ^:{} _:{} num:t toc:t \n:t
#+INCLUDE: "../../layout/template.org"
#+SETUPFILE: "../../layout/extension.org"
#+title:

* 3.X中print()
#+BEGIN_EXAMPLE
在python3.2:
print(value, ..., sep=' ', end='\n', file=sys.stdout)
sep表示输出之间的符号，end表示整个输出的结束符。

>>> print('hello', 'world')
hello world
>>> print('hello', 'world', sep='\n')
hello  #Because sep is \n, this is a new line.
world
>>> print('hello', 'world', end=' ')
hello world >>>  #Because end is ' ', so this is no newline.
#+END_EXAMPLE

* list
** list()
** reverse() 
** sort() sorted()
#+BEGIN_EXAMPLE
sorted(iterable, cmp=None, key=None, reverse=False) --> new sorted list
L.sort(cmp=None, key=None, reverse=False) -- stable sort *IN PLACE*;

区别在：sorted是built-in 函数， sort是list的成员函数。前者作用于列表但并不对列表造成影响，后才修改了列表。

iterable 可迭代的类药
cmp 比较函数
key 用列表元素的某个属性和函数进行作为关键字
reverse 排序规则
一般cmp，key 可以用lambda表达式，效率key>cmp

>>>L = [('b',2),('a',1),('c',3),('d',4)]
>>>print sorted(L, cmp=lambda x,y:cmp(x[1],y[1]))
[('a', 1), ('b', 2), ('c', 3), ('d', 4)]

>>>L = [('b',2),('a',1),('c',3),('d',4)]
>>>print sorted(L, key=lambda x:x[1]))
[('a', 1), ('b', 2), ('c', 3), ('d', 4)]

>>> print sorted([5, 2, 3, 1, 4], reverse=True)
[5, 4, 3, 2, 1]
>>> print sorted([5, 2, 3, 1, 4], reverse=False)
[1, 2, 3, 4, 5]
#+END_EXAMPLE

** insert()
#+BEGIN_EXAMPLE
L.insert(index, object)   # Insert object before index
#+END_EXAMPLE
** pop([index])  
L.pop([index]) # Remove and return item at index (defaut last)
** remove(value)
#+BEGIN_EXAMPLE
L.remove(value)   # Remove fist occurence of value.
#+END_EXAMPLE

** count(value)
L.count(value) # Return number of occurrences of value.
   
* integers:
** ord()
#+BEGIN_EXAMPLE
  ord('字符') #返回ASCII码
#+END_EXAMPLE

* string
** count(sub, [start [, end]])
** find(sub, [start [, end]])
** isalpha isdigit isalnum islower isupper istitle isspace
** lower upper title swapcase 
** ljust rjust center
** split rsplit lsplit
** strip lstrip rstrip
** replace(old, new[, count]) ->string
** startswith
* map
** keys values
** get(k[, d])
   Dict.get(k[, d])等价于 Dict[k] if k in Dict else d
   避免获取不存在的字典键而产生错误
* set
** set(sequence)
   X=set('spam') 等价于 X = {'s', 'p', 'a', 'm'}
** |
   X|Y 等价于 X.union(Y)
** &
   intersection
** -
   difference
** symmetric_difference
   对称差
** add
   添加一个元素（保证集合的不重复性）
** clear
** pop remove
** update union_update intersection_update difference_update symmetric_difference_update
   更新、用取并结果更新原来集合……
** issubset issuperset isdisjoint
   子集、父集、不相交集
#+BEGIN_HTML
<script src="../../layout/js/disqus-comment.js"></script>
<div id="disqus_thread">
</div>
#+END_HTML
* len()
* type()
  查看类型
  type(X) == set    #判断X是不是set类型
  type(D) == dict
  isinstance(D, dict) 与上行等价
* str()
* repr()
* math.trunc()
#+BEGIN_EXAMPLE
去除浮点后面的
因为版本问题：在2.6中 3/2=>1，而在3.0中 3/2 =>1.5。为避免版本引起的问题，可以用math.trunc().math.trunc(3/2)=>1
#+END_EXAMPLE
* math.floor()
#+BEGIN_EXAMPLE
>>> math.floor(2.5)
2.0
>>> math.floor(-2.5)
-3.0
#+END_EXAMPLE

* oct() hex() bin()
#+BEGIN_EXAMPLE
把10进制整数转化成8 16 2进制字符串
2.6版本中8进制前面加0，3.0版本中前面加0o
>>> oct(64), hex(64), bin(64)
('0100', '0x40', '0b1000000')
#+END_EXAMPLE
* int()
#+BEGIN_EXAMPLE
int(x[, base]) -> integer
把一个数字的字符串变换为整数，其中base指定指定x的进制。
>>> int('64'), int('100', 8), int('40', 16), int('1000000', 2)
(64, 64, 64, 64)
>>> int('0x40', 16), int('0b1000000', 2) #与上面等价
(64, 64)
#+END_EXAMPLE
* eval()
* bit_length()
#+BEGIN_EXAMPLE
#以二进制查询表示一个数字的什所需的位数
>>> (256).bit_length()
9
>>> len(bin(256)) - 2
9
#+END_EXAMPLE

* math.pi math.e math.sin() math.sqrt() math.pow() pow() abs() min() max()
#+BEGIN_EXAMPLE
python中有三种方法可以计算平方根：
import math
math.sqrt(144)
pow(144, .5)
144 ** .5
#+END_EXAMPLE
----------------------------------------
#+BEGIN_EXAMPLE
 pow(x, y[, z]) -> number
 通常是两个参数，若三个则表示 (x ** y) % z
#+END_EXAMPLE
* random module
** random.random()
随机生成0-1之间的小数
** random.randint(a, b)
随机生成a-b之间的娄
>>> random.randint(1, 10)
5
** random.choice(self, seq)
随机从序列中挑选
>>> random.choice(['a', 'b', 'c'])
'c'
* zip
#+BEGIN_EXAMPLE
zip(seq1, seq2, seq3...)=> [(seq1[0], seq2[0]...), (seq1[1], seq2[1]...), ...]
#+END_EXAMPLE
** 利用zip构造字典
#+BEGIN_SRC python
>>> d1=('a', 'b', 'c')
>>> d2=(1,2,3)
>>> dict(zip(d1,d2))
{'a': 1, 'c': 3, 'b': 2}
>>> d = dict(zip(d1,d2))
>>> d["a"]
1
#+END_SRC     
* enumerate
#+BEGIN_EXAMPLE
enumerate(iterable[, start]) -> iterator for index, value of iterable
#+END_EXAMPLE
#+BEGIN_SRC python
>>> s='spam'
>>> for (offset, item) in enumerate(s):
...     print (offset, item)
... 
(0, 's')
(1, 'p')
(2, 'a')
(3, 'm')
#+END_SRC  
* reduce
#+BEGIN_EXAMPLE
reduce(function, sequence[, initial]) -> value
#+END_EXAMPLE
  initial可选，当sequence为空结果为该值。
#+BEGIN_SRC python
reduce(lambda x,y:x*y, [1,2,3,4,5,6,7]) =>(((((1*2)*3)*4)*5)*6)*7
#+END_SRC  
* str.maketrans/str.translate
  用来从一个字符串翻译到另一个字符串
#+begin_src python
before = 'koe'
after = 'mqg'
trantab = maketrans(before, after)
print 'koe'.translate(trantab)
#+end_src
* chr/ord
  chr(数字) 将数字转换为对应的ASCII码
  ord(char) 将char转换为对应的ASCII值
#+BEGIN_HTML
<script src="../../layout/js/disqus-comment.js"></script>
<div id="disqus_thread">
</div>
#+END_HTML
* 列出当前目录下的文件或目录
  #+BEGIN_EXAMPLE
  [file for file in os.listdir('.') if os.path.isfile(file)]
  [file for file in os.listdir('.') if os.path.isdir(file)]
  #+END_EXAMPLE
